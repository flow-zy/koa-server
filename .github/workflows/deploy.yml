name: Deploy

on:
  push:
    branches: [ master ]

env:
  NODE_VERSION: '18.16.1'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm install

      - name: Build
        run: |
          pnpm build
        env:
          NODE_ENV: production
          MYSQL_DB: ${{ secrets.MYSQL_DB }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PWD: ${{ secrets.MYSQL_PWD }}
          APP_PORT: ${{ secrets.APP_PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          AES_KEY: ${{ secrets.AES_KEY }}
          AES_IV: ${{ secrets.AES_IV }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          # 创建部署目录（如果不存在）
          ssh $SERVER_USERNAME@$SERVER_HOST "mkdir -p $DEPLOY_PATH"

          # 复制构建文件到服务器
          scp -r dist/* $SERVER_USERNAME@$SERVER_HOST:$DEPLOY_PATH
          scp package.json $SERVER_USERNAME@$SERVER_HOST:$DEPLOY_PATH
          scp pnpm-lock.yaml $SERVER_USERNAME@$SERVER_HOST:$DEPLOY_PATH

          # 在服务器上执行部署命令
          ssh $SERVER_USERNAME@$SERVER_HOST "cd $DEPLOY_PATH && \
            npm install -g pnpm && \
            pnpm install --production && \
            pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production"